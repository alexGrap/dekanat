// Code generated by protoc-gen-go. DO NOT EDIT.
// source: file.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	StartLink            string   `protobuf:"bytes,1,opt,name=startLink,proto3" json:"startLink,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_9188e3b7e55e1162, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetStartLink() string {
	if m != nil {
		return m.StartLink
	}
	return ""
}

type Response struct {
	ResultLink           string   `protobuf:"bytes,1,opt,name=resultLink,proto3" json:"resultLink,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_9188e3b7e55e1162, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResultLink() string {
	if m != nil {
		return m.ResultLink
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "api.Request")
	proto.RegisterType((*Response)(nil), "api.Response")
}

func init() {
	proto.RegisterFile("file.proto", fileDescriptor_9188e3b7e55e1162)
}

var fileDescriptor_9188e3b7e55e1162 = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xcb, 0xcc, 0x49,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x52, 0xe7, 0x62, 0x0f,
	0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe1, 0xe2, 0x2c, 0x2e, 0x49, 0x2c, 0x2a, 0xf1,
	0xc9, 0xcc, 0xcb, 0x96, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x08, 0x28, 0x69, 0x71, 0x71,
	0x04, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0xc9, 0x71, 0x71, 0x15, 0xa5, 0x16, 0x97,
	0xe6, 0x20, 0x2b, 0x45, 0x12, 0x31, 0x8a, 0xe2, 0xe2, 0x06, 0xd1, 0xce, 0x19, 0x89, 0x79, 0xe9,
	0xa9, 0x45, 0x42, 0x2a, 0x5c, 0xcc, 0xee, 0xa9, 0x25, 0x42, 0x3c, 0x7a, 0x89, 0x05, 0x99, 0x7a,
	0x50, 0xdb, 0xa4, 0x78, 0xa1, 0x3c, 0x88, 0x91, 0x4a, 0x0c, 0x42, 0xaa, 0x5c, 0x2c, 0x01, 0xf9,
	0xc5, 0x84, 0x94, 0x25, 0xb1, 0x81, 0x1d, 0x6f, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x91, 0xa4,
	0x64, 0x35, 0xca, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LinkChangerClient is the client API for LinkChanger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LinkChangerClient interface {
	Get(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Post(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type linkChangerClient struct {
	cc grpc.ClientConnInterface
}

func NewLinkChangerClient(cc grpc.ClientConnInterface) LinkChangerClient {
	return &linkChangerClient{cc}
}

func (c *linkChangerClient) Get(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.LinkChanger/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkChangerClient) Post(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.LinkChanger/Post", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LinkChangerServer is the server API for LinkChanger service.
type LinkChangerServer interface {
	Get(context.Context, *Request) (*Response, error)
	Post(context.Context, *Request) (*Response, error)
}

// UnimplementedLinkChangerServer can be embedded to have forward compatible implementations.
type UnimplementedLinkChangerServer struct {
}

func (*UnimplementedLinkChangerServer) Get(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedLinkChangerServer) Post(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Post not implemented")
}

func RegisterLinkChangerServer(s *grpc.Server, srv LinkChangerServer) {
	s.RegisterService(&_LinkChanger_serviceDesc, srv)
}

func _LinkChanger_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkChangerServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LinkChanger/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkChangerServer).Get(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinkChanger_Post_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkChangerServer).Post(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.LinkChanger/Post",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkChangerServer).Post(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _LinkChanger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.LinkChanger",
	HandlerType: (*LinkChangerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _LinkChanger_Get_Handler,
		},
		{
			MethodName: "Post",
			Handler:    _LinkChanger_Post_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "file.proto",
}
